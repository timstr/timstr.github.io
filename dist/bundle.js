!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}([function(e,t){e.exports=React},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.Link=(e=>a.createElement("a",{href:e.dst,target:"_blank",rel:"noopener noreferrer"},e.children))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.Section=(e=>a.createElement("div",{className:"section"},a.createElement("div",{className:"section-heading"},a.createElement("div",{className:"section-contents"},e.header)),a.createElement("div",{className:"section-body"},a.createElement("div",{className:"section-contents"},e.children)))),t.SubSection=(e=>a.createElement("div",{className:"subsection"},e.children))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class a{constructor(e,t,n,a){this._r=0,this._g=0,this._b=0,this._a=1,"string"==typeof e?this.parseHexString(e):"number"==typeof e&&(this._r=e,this._g=t,this._b=n,this._a=void 0===a?1:a)}get red(){return this._r}get green(){return this._g}get blue(){return this._b}get alpha(){return this._a}set red(e){this._r=Math.min(Math.max(e,0),1)}set green(e){this._g=Math.min(Math.max(e,0),1)}set blue(e){this._b=Math.min(Math.max(e,0),1)}set alpha(e){this._a=Math.min(Math.max(e,0),1)}toHexString(){return"#"+this.toHexByte(this._r)+this.toHexByte(this._g)+this.toHexByte(this._b)+this.toHexByte(this._a)}clone(){return new a(this._r,this._g,this._b,this._a)}parseHexString(e){if(/^#[0-9a-fA-F]*$/.test(e)){if(4===e.length)return this._r=parseInt(e.slice(1,2),16)/15,this._g=parseInt(e.slice(2,3),16)/15,this._b=parseInt(e.slice(3,4),16)/15,void(this._a=1);if(5===e.length)return this._r=parseInt(e.slice(1,2),16)/15,this._g=parseInt(e.slice(2,3),16)/15,this._b=parseInt(e.slice(3,4),16)/15,void(this._a=parseInt(e.slice(4,5),16)/15);if(7===e.length)return this._r=parseInt(e.slice(1,3),16)/255,this._g=parseInt(e.slice(3,5),16)/255,this._b=parseInt(e.slice(5,7),16)/255,void(this._a=1);if(9===e.length)return this._r=parseInt(e.slice(1,3),16)/255,this._g=parseInt(e.slice(3,5),16)/255,this._b=parseInt(e.slice(5,7),16)/255,void(this._a=parseInt(e.slice(7,9),16)/255)}throw Error("Invalid hexadecimal color string")}toHexByte(e){const t=Math.min(Math.max(Math.round(255*e),0),255).toString(16);return 1==t.length?"0"+t:t}}t.Color=a,t.linearMix=function(e,t,n){const o=void 0===n?.5:n,l=1-o;return new a(e.red*l+t.red*o,e.green*l+t.green*o,e.blue*l+t.blue*o,e.alpha*l+t.alpha*o)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(3);class l extends a.Component{constructor(e){super(e),this.startHover=(()=>{this.setState({hover:!0})}),this.stopHover=(()=>{this.setState({hover:!1})}),this.state={hover:!1}}render(){let e=this.props.color;this.props.active&&this.props.activeColor?e=this.props.activeColor:this.state.hover&&this.props.hoverColor&&(e=this.props.hoverColor);const t={backgroundColor:e.toHexString()};return a.createElement("div",{className:this.props.active?"tabmenuitem-active":"tabmenuitem",style:t,onClick:this.props.onClick,onMouseEnter:this.startHover,onMouseLeave:this.stopHover},a.createElement("span",{className:"tabmenuitem-title"},this.props.title))}}t.TabMenu=class extends a.Component{constructor(e){super(e),this.onSelectTab=(e=>{const t=this.state.tabs.find(t=>t.title===e);void 0===t?this.setState({title:null,content:null}):this.setState({title:t.title,content:t.render()})});let t=null,n=e.children(this.onSelectTab);n.length>0&&(t=n[0]),this.state={title:t.title,content:t.render(),tabs:n}}render(){const e=o.linearMix(this.props.backgroundColor,this.props.contentColor,.5),t=o.linearMix(e,new o.Color("#fff"),.5);return a.createElement("div",{className:"tabmenu",style:{backgroundColor:this.props.backgroundColor.toHexString()}},a.createElement("div",{className:"tabmenu-list"},this.state.tabs.map(n=>a.createElement(l,{key:n.title,active:n.title===this.state.title,title:n.title,color:e,hoverColor:t,activeColor:this.props.contentColor,onClick:()=>this.onSelectTab(n.title)}))),a.createElement("div",{className:"tab-content",style:{backgroundColor:this.props.contentColor.toHexString()}},this.state.content||"Please select a tab"))}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.BigImage=(e=>{const t="img/"+e.name+(e.name.includes(".")?"":".png");return a.createElement("div",{className:"bigimage"},a.createElement("img",{className:"bigimage-img",src:t}))})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.SoundCloudPlayer=(e=>a.createElement("iframe",{className:"soundcloudplayer",width:e.width,height:e.height,scrolling:"no",frameBorder:"no",allow:"autoplay",src:`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${e.trackid}&color=%23000000&auto_play=false&hide_related=true&show_comments=false&show_user=true&show_reposts=false&show_teaser=true&visual=true`}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(8),l=n(1);t.ImageIcon=(e=>a.createElement("div",{className:"pieceicon"},a.createElement(l.Link,{dst:`img/${e.image}.png`},a.createElement(o.LazyImage,{className:"pieceicon-img",src:`${e.image}_small.png`}))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.LazyImage=class extends a.Component{constructor(e){super(e),this.handleLoad=(()=>{this.setState({loaded:!0})}),this.state={loaded:!1}}render(){return a.createElement("img",{className:"lazyimage"+(this.props.className?" "+this.props.className:""),src:"img/"+this.props.src,width:this.props.width,height:this.props.height,onLoad:this.handleLoad,style:{opacity:this.state.loaded?1:0}})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(10),l=n(11);o.render(a.createElement(l.Main,null),document.getElementById("main"))},function(e,t){e.exports=ReactDOM},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(12),l=n(3),r=n(13),s=n(21),i=n(22),c=n(23),u=n(4),m=n(28),d=n(31);t.Main=(()=>a.createElement(a.Fragment,null,a.createElement("div",{className:"backdrop"}),a.createElement("div",{className:"maincontainer"},a.createElement("div",{className:"mainbody"},a.createElement(o.FaceIcon,null),a.createElement("h1",{className:"mainheader"},"Welcome to Tim"),a.createElement(u.TabMenu,{contentColor:new l.Color("#ffffff"),backgroundColor:new l.Color("#626289")},()=>[{title:"About Me",render:()=>a.createElement(d.AboutMe,null)},{title:"Flosion",render:()=>a.createElement(r.Flosion,null)},{title:"Fractals",render:()=>a.createElement(m.Fractals,null)},{title:"Rigid Body Dynamics",render:()=>a.createElement(s.RigidBodyDynamics,null)},{title:"Cellular Automata",render:()=>a.createElement(i.CellularAutomata,null)},{title:"Other Projects",render:()=>a.createElement(c.OtherProjects,null)}])))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.FaceIcon=(()=>a.createElement("div",{className:"faceicon"},a.createElement("img",{className:"faceicon-img",src:"img/face.jpg"})))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(4),l=n(3),r=n(14),s=n(15),i=n(16),c=n(17),u=n(20);t.Flosion=(()=>a.createElement(o.TabMenu,{backgroundColor:new l.Color("#fff"),contentColor:new l.Color("#ddf")},()=>[{title:"About",render:()=>a.createElement(r.AboutFlosion,null)},{title:"How It Works",render:()=>a.createElement(s.HowItWorks,null)},{title:"Implementation",render:()=>a.createElement(c.Implementation,null)},{title:"Examples",render:()=>a.createElement(i.Examples,null)},{title:"Song Gallery",render:()=>a.createElement(u.SongGallery,null)}]))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2);t.AboutFlosion=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"About Flosion"),a.createElement(o.Section,{header:a.createElement("h2",null,"What is it?")},a.createElement("p",null,"Flosion is the tentative name for sound editing software that I've been working on in one form or another for a handful of years. Briefly put, it's a visual programming language for creating, modifying, and listening to streams of sound. It allows the user to compose various effects by building a network, and to listen to the results in real-time. Every effect is highly configurable, and can be parameterized by nearly anything else in the network.")),a.createElement("p",null),a.createElement(o.Section,{header:a.createElement("h2",null,"Motivation")},a.createElement("p",null,"I began dreaming about this project when I was trying to use existing digital audio workstations like Apple's Logic Pro to create my own synthesizers, effects and melodies and put together songs. I had a great deal of fun with these, but many out-of-the-box synths and effects are complicated and have limited degrees of freedom, which can be overwhelming for a beginner and restrictive for the experienced user who wants to change something fundamental. It also seemed impossible to make one effect depend on properties of another effect, which was something I regularly wanted. Lots of existing music software that I've seen provides the user with a timeline, a list of audio tracks to layer over one another on this timeline, and a chain of effects to be applied to each track. These effects themselves are modular and range from simple, with one or two parameters, to walls of buttons, knobs, and detailed graphics. This works well for creating compositions and using effects that one already likes, but I wanted to be able to lift the hood and re-wire things as I desired."),a.createElement("p",null,"Thus I slowly began developing my own audio software. The beginnings were very slow and I'll skip the details by saying that I learned intimately how many things you can do wrong in C++. But over time, the more I learned and the more I developed, my software took shape and the first few interesting-sounding glitches were then followed by recognizable melodies and recreations of effects that I was familiar with from elsewhere. There's still a lot I plan to do, but with the foundations already in place, I'm hoping Flosion will eventually be good enough to create freely with and to share with the community."),a.createElement("p",null,"The end goal is to have software that allows users to play with sounds and create music, working at the level of abstraction they desire, and while having the freedom to configure anything they wish, all while remaining very expressive, intuitive, and unique in its approach."))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2),l=n(5),r=n(1);t.HowItWorks=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"How Flosion Works"),a.createElement(o.Section,{header:a.createElement("h2",null,"Overview")},a.createElement("h4",null,"Data Types and Objects"),a.createElement("p",null,"In Flosion, there are two data types: sound streams and numbers. There are also objects, which produce and consume this data. The two types, naturally, are sound objects and number objects."),a.createElement(l.BigImage,{name:"flosion/numbersandsounds"}),a.createElement("h4",null,"Number Objects"),a.createElement("p",null,"Number objects have no state. They can only accept numbers as inputs and always produce numbers as outputs. These act just familiar mathematical functions. Examples of number objects include addition, multiplication, trigonometric functions, and numeric constants."),a.createElement(l.BigImage,{name:"flosion/numberobjects"}),a.createElement("h4",null,"Sound Objects"),a.createElement("p",null,"Sound objects produce a stream of sound that can be listened to or given to other objects as input. Sound objects can also take sound streams as inputs, modifying them according to their design, and returning the result as their output. Sound objects can additionally accept numbers as inputs, which may control various behaviors of the sound object. Finally, sound objects can also produce numbers, which typically represent a part of the object's state, which can be used as inputs to other objects. Sound objects are allowed to have stateful information that changes over time as it produces sound. Many sound objects also expose some of their stateful information in the form of number outputs. Some examples include an amplifier, an echo effect, or a sound clip."),a.createElement(l.BigImage,{name:"flosion/soundobjects"}),a.createElement(o.SubSection,null,a.createElement("h4",null,"Flow Networks"),a.createElement("p",null,"Sound objects and number objects can be wired together ad hoc to create a network. This is done simply by connecting number outputs with number inputs, and sound outputs with sound inputs. In these networks, sound is always flowing in one direction and numbers are flowing in the opposite direction. Why this is so is explained further down. The output of these networks is a sound that can be listened to. For example, one can attach the output of a sound clip object to the input of an amplifier object, to define a network which produces a louder or quieter version of the original sound clip."),a.createElement(l.BigImage,{name:"flosion/ampnetwork"}),a.createElement("p",null,"Of course, these networks can get far more interesting."),a.createElement(l.BigImage,{name:"flosion/morecomplicated"})),a.createElement(o.SubSection,null,a.createElement("h4",null,"Inputs and Outputs"),a.createElement("p",null,"For sending and receiving numbers, there are of number inputs and number outputs. There are also sound ouputs, which produce streams of sound, and sound inputs, which consume them. There are two types of sound inputs, single-inputs and multi-inputs. A sound output that is connected to a single-input always produces a single stream of sound for that input. But a sound output that is connected to a multi-input can produce multiple streams, at the same time. A multi-input always has some known arity, which is a number that generalizes the number of streams it can receive in parallel. A single-input is essentially a special case of a multi-input, with a fixed arity of 1."),a.createElement(l.BigImage,{name:"flosion/inputsandoutputs"})),a.createElement(o.SubSection,null,a.createElement("h4",null,"Parallelism"),a.createElement("p",null,"Recall that sound objects are allowed to have state. Actually, sound objects can have ",a.createElement("i",null,"multiple")," states at the same time. This is one case where Flosion departs from the physical realm a bit. The reason for this is that sometimes the same sound stream needs to be used in multiple places, and the results want to be heard in real-time. Another reason is the existence of sound multi-inputs, which call upon their inputs multiple times in parallel. Multi-inputs are very useful for creating certain types of sound objects. For example, a synthesizer can be plugged into the multi-input of a sound object that generates a melody from some number of notes notes. The result is that if the melody has n notes, then for every state of the melody generator, there will be an additional n states in the synthesizer. This way, the melody can use the same synthesizer multiple times in parallel to play overlapping notes, without any distortions or conflict from shared state."),a.createElement(l.BigImage,{name:"flosion/parallelsynth"}),a.createElement("h4",null,"Relativism"),a.createElement("p",null,"Another quirk of Flosion is that time is very relative. Some sound objects create delays in the sounds they draw upon, and other sound objects change the speed of time coming from their inputs. This means that when one sound object queries the current time of another sound object, it might see different value and a different speed of time from what it knows. This isn't as big of a problem as it might sound. In practice, it just works out."),a.createElement(l.BigImage,{name:"flosion/timestretchdelay"})),a.createElement(o.SubSection,null,a.createElement("h4",null,"The Flow of Information"),a.createElement("p",null,"In Flosion, sound streams always flow in one direction, and numbers always flow in the opposite direction. This is necessary because of multi-inputs, which allow one sound object to call upon an input many times in parallel. This means that the parent sound object sees many states in the child sound object, while the child object only ever sees one parent state. Thus it's a bit meaningless for the parent object to ask for stateful information from the child, while it always makes sense for a child to ask for stateful information from a parent. Of course, this restriction doesn't apply for constants and numbers that don't depend on state, but those never change and are a bit boring anyway. Thus, sounds flow up the network, and numbers flow down the network. With both numbers and sound streams, closed loops would cause an infinite recursion, and so are not allowed."),a.createElement(l.BigImage,{name:"flosion/goodbadconnections"}),a.createElement("p",null,"Finally, an output can be connected to any number of inputs, but every input can have at most one output."),a.createElement(l.BigImage,{name:"flosion/oneinputmanyoutputs"}))),a.createElement(o.Section,{header:a.createElement("h2",null,"Abstract Structure")},a.createElement("p",null,"The networks of sound objects in Flosion always form a"," ",a.createElement(r.Link,{dst:"https://en.wikipedia.org/wiki/Directed_acyclic_graph"},"directed acyclic graph (DAG)"),". Number objects also always connect to form a DAG, though, as discussed above, the flow of sound and numbers is always in the opposite direction."),a.createElement(l.BigImage,{name:"flosion/subgraphs"}),a.createElement("p",null,"The states of sound objects are a bit special. Every state has a parent state, and every state can have multiple child states. The states of the sound objects thus form a tree, and this tree has a similar structure to the overall sound object network. Given any sound object, it has one state for every sound single-input it is connected to, and n states for every n-adic multi-input it is connected to."),a.createElement(l.BigImage,{name:"flosion/statetree"}))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2),l=n(5),r=n(1),s=n(6);t.Examples=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Examples"),a.createElement(o.Section,{header:a.createElement("h2",null,"Preamble")},a.createElement("p",null,"Flosion is an ongoing project, and has been for a few years now. Consequently, the code base has been through many major overhauls, and the user interface has also changed a number of times, and is changing yet again as part of a current code update. The abstract structure has remained the same for a long time though, and so the various screenshots here are still very relevant.")),a.createElement(o.Section,{header:a.createElement("h2",null,"Basic Setups")},a.createElement("p",null,'This screenshot is of an early version of Flosion, and shows, at the top, two numeric constants, X and Y, being passed to an "Add" number object, which can be seen computing their sum. Below that is another variable, "X Domain," being passed through a "Sine" object, and into a graphing object. Graphing objects were a very useful feature that unfortunately were implemented in a very unsafe and messy way, and ways to reintroduce them are under investigation. At the bottom of the image, there is the object labeled "Aaah.wav," which is simply a sound object that plays a sound file. This object is fed into the "PlayBack" object, which simply takes the sound stream entering its input and plays the stream to the computer\'s speakers. The result is that one can physically hear a recording of myself shouting.'),a.createElement("p",null,"If the font looks weird, it's probably because the glyphs were hand drawn by myself, using a pixel art program that I also wrote myself to animate video game characters, all because I couldn't figure out how to use standard text rendering APIs. But that's a different story from my earlier days as a programmer."),a.createElement(l.BigImage,{name:"flosion/demo1"}),a.createElement(o.SubSection,null,a.createElement("p",null,"In this example, a Filter object is used, which computes a"," ",a.createElement(r.Link,{dst:"https://en.wikipedia.org/wiki/Fast_Fourier_transform"},"fast Fourier transform")," ","of its input sound to create a"," ",a.createElement(r.Link,{dst:"https://en.wikipedia.org/wiki/Spectrogram"},"spectrogram"),'. This spectrogram can be used to see how the sound is composed of a distribution of waves of different frequencies and amplitudes. The Filter object can be used to amplify or attenuate these frequencies selectively. It exposes a "frequency" number source at its top, which it can change to select a frequency, and it provides an "amplitude" number input, which it multiplies individual frequencies by. To modify individual frequencies, one simply needs to define a function of the Filter\'s frequency and pass it into the "amplitude" input. In this screenshot, a bell curve, or Gaussian distribution, is used to silence all but a narrow range of frequency components. The overall result is that a'," ",a.createElement(r.Link,{dst:"https://en.wikipedia.org/wiki/Band-pass_filter"},"band-pass filter")," ","is applied to the sound stream. Band-pass filters are a fairly common effect in digital music production, and can be used for things like isolating vocals or bass from a larger piece of audio."),a.createElement(l.BigImage,{name:"flosion/demo2"})),a.createElement(o.SubSection,null,a.createElement("p",null,"Here, we see a NoteGen object being used. This object is essentially a"," ",a.createElement(r.Link,{dst:"https://en.wikipedia.org/wiki/Function_generator"},"function generator"),', which produces some periodic signal at a specified frequency. The NoteGen object exposes a "phase" number output, visible on its top edge, and accepts a "wave function" input. By defining the wave function input to be any desirable function of the phase, the user can create any wave form they choose. The wave function chose here is the canonical sine wave.'),a.createElement("p",null,'The frequency at which this wave form is played in the output sound is determined by the "frequency" number input, which is being given the constant value of 250 Hz here. The end result of this setup is a simple sine-wave tone of 250 Hz.'),a.createElement(l.BigImage,{name:"flosion/demo3"})),a.createElement(o.SubSection,null,a.createElement("p",null,"Here, the NoteGen object is used in tandem with the Sampler object. The Sampler object is used to define a melody. The vertical axis denotes note pitch, and the horizontal axis denotes time. Essentially, it represents sheet music, but without all the swirls and lines and other complex rules. The Sampler uses a multi-input so that it can call upon its input many times in parallel, which it needs to do when its notes overlap in time. The Sampler object also exposes a \"note frequency\" number output, which simply yields the value of the current note's frequency. By plugging this into the NoteGen's frequency input, it produces a note of the desired pitch. This example thus plays a sine-wave melody which is defined by the notes drawn on the Sampler object."),a.createElement(l.BigImage,{name:"flosion/demo4"}))),a.createElement(o.Section,{header:a.createElement("h2",null,"More Complicated Examples")},a.createElement("p",null,"Here's what it can look like when bigger networks of sounds and numbers are put together. It can get messy quickly, which is why the next major version of Flosion will include new ways to encapsulate sub-networks and hide the small details when needed."),a.createElement(l.BigImage,{name:"flosion/franklyamess"}),a.createElement(o.SubSection,null,a.createElement("p",null,"The following setup was used as-is to create a pair of recorded songs. The songs themselves can be listened to below the screenshot."),a.createElement(l.BigImage,{name:"flosion/simplesong"}),a.createElement(s.SoundCloudPlayer,{trackid:"275870851",width:300,height:300}),a.createElement(s.SoundCloudPlayer,{trackid:"275870658",width:300,height:300}))),a.createElement(o.Section,{header:a.createElement("h2",null,"More Graphing Objects")},a.createElement("p",null,"In previous versions where graphing objects still existed, 2D graphing objects could also be used, and were very useful for visualizing multi-dimensional things like filter functions that changed over time."),a.createElement(l.BigImage,{name:"flosion/2dgraph"})),a.createElement(o.Section,{header:a.createElement("h2",null,"A Quick Note on the Sampler")},a.createElement("p",null,"In more recent versions of Flosion, I've been working to allow the notes of a Sampler object to be far more customizable than those of comparable note sequencers in other music software. Firstly, notes can change frequency on the fly, as shown in the first example. Second, notes can be parameterized by adding any number of numeric values that change as desired over the course of the note's lifetime. These parameters are very useful for creating truly customized melodies and effects, and help to give back some creative freedoms, like dynamically modifying the timbre of instrument, which is otherwise lost when making music on a computer."),a.createElement(l.BigImage,{name:"flosion/sampler1"}),a.createElement(l.BigImage,{name:"flosion/sampler2"}),a.createElement(l.BigImage,{name:"flosion/sampler3"}))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2),l=n(1),r=n(18),s=n(19);t.Implementation=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"How Flosion Is Written"),a.createElement(o.Section,{header:a.createElement("h2",null,"Implementation")},a.createElement("h4",null,a.createElement("code",null,"NumberSource")," and ",a.createElement("code",null,"NumberInput")),a.createElement("p",null,"Flosion is written in C++ and uses ",a.createElement(l.Link,{dst:"https://www.sfml-dev.org/"},"SFML")," ","for drawing, playing sounds, handling user input and managing windows. Additionally, Flosion uses a GUI library that I wrote myself and have used for other projects, which is very much inspired by HTML and its JavaScript interface. The GUI is also written in modern C++ and uses SFML."),a.createElement("p",null,"The source code makes heavy use of inheritance and templates. Inheritance is used to provide a generic interface for sound and number objects to communicate, while templates are used to avoid boilerplate and preserve type-safety. The code shown here is stripped down significantly, and in the actual source code, a lot of book-keeping methods are necessary, which are not needed to understand the basics."),a.createElement("p",null,"Here are the essentials details of the ",a.createElement("code",null,"NumberSource")," class, which every number object inherits from. ",a.createElement("code",null,"evaluate()")," is a polymorphic function that number objects override to compute whatever they like. ",a.createElement("code",null,"dependencies")," and"," ",a.createElement("code",null,"dependants")," represent the objects that are directly connected as inputs and outputs."),a.createElement(r.CodeSnippet,null,s.NumberSourceSnippet),a.createElement("p",null,"Another class, called ",a.createElement("code",null,"NumberInput"),", is used to connect to any number object and get its value, or some default value if nothing is connected."),a.createElement(r.CodeSnippet,null,s.NumberInputSnippet),a.createElement("p",null,"Using both of these classes, the 'Add' number object can be now implemented like this:"),a.createElement(r.CodeSnippet,null,s.AddObjectSnippet),a.createElement(o.SubSection,null,a.createElement("h4",null,a.createElement("code",null,"State")," and ",a.createElement("code",null,"Stateful")),a.createElement("p",null,"The ",a.createElement("code",null,"state")," parameter is used to record the current context, and represents a path in the state tree. It can be used to get the (relative) current time, and is needed by stateful number sources (which live inside sound objects) to retrieve the correct stateful information."),a.createElement("p",null,"Below is the ",a.createElement("code",null,"State")," class, which is the base class of every type of state. It simply stores a pointer to its parent state, and a pointer to the"," ",a.createElement("code",null,"Stateful"),"object that owns this state. A polymorphic"," ",a.createElement("code",null,"reset()")," function is used to restore states to their original condition. Derived ",a.createElement("code",null,"State")," types are used to hold whatever time-sensitive information that ",a.createElement("code",null,"Stateful")," objects need to store. Rather than storing stateful data through instance members,"," ",a.createElement("code",null,"Stateful")," objects will use many instances of a custom"," ",a.createElement("code",null,"State")," type."),a.createElement(r.CodeSnippet,null,s.StateSnippet),a.createElement("p",null,"And here is the ",a.createElement("code",null,"Stateful")," base class, which represents any type that stores stateful information in some collection of ",a.createElement("code",null,"State")," objects. The details of how this is done varies by sub-class. For example,"," ",a.createElement("code",null,"SoundSource"),", ",a.createElement("code",null,"SingleInput")," and ",a.createElement("code",null,"MultiInput")," ","all store states slightly differently, but the ",a.createElement("code",null,"Stateful")," class is common interface shared by all, which makes sorting out dependencies much simpler."),a.createElement(r.CodeSnippet,null,s.StatefulSnippet)),a.createElement(o.SubSection,null,a.createElement("h4",null,"The ",a.createElement("code",null,"SoundSource")," Base Class"),a.createElement("p",null,"Every type of sound object is represented by a basic ",a.createElement("code",null,"SoundSource")," ","base class. Since every sound object needs to manage stateful information,"," ",a.createElement("code",null,"SoundSource")," derives from ",a.createElement("code",null,"Stateful"),". The"," ",a.createElement("code",null,"getNextChunk")," method is used to fetch up-to-date snippets of sound information from the sound object, and by calling this method rapidly and regularly, a stream is created which contains real-time audio information."),a.createElement(r.CodeSnippet,null,s.SoundSourceSnippet),a.createElement("p",null,"While the ",a.createElement("code",null,"SoundSource")," class is simple enough to be used generically by any kind of sound input, it doesn't concern itself with how it stores states or even what kind of state it works with. This is where"," ",a.createElement("code",null,"SoundSourceBase")," comes in. ",a.createElement("code",null,"SoundSourceBase")," exists to automatically manage creating, updating, and retrieving states of any type. This class exists for the convenience and safety of not having to do this tedious work for each new sound object type. The class overrides"," ",a.createElement("code",null,"SoundSource::getNextChunk()"),", which provides only weakly-typed state information, and retrieves its own, strongly-typed internal state, which is provided to the new ",a.createElement("code",null,"renderChunk()"),", which, in derived sound object classes, does the actual work of producing sound."),a.createElement(r.CodeSnippet,null,s.SoundSourceBaseSnippet)),a.createElement(o.SubSection,null,a.createElement("h4",null,"Concrete Example"),a.createElement("p",null,"All the above code, and much more code that isn't being shown, exist to make implementing new sound object far simpler and less error-prone than it otherwise would be. In this example, the ",a.createElement("code",null,"Audio")," class is implemented, which is a sound object that simply loads a sound from a file and produces this sound as its output. To make do this, only two things are needed. One needs to define what information it stores as part of its state, which is done here in the"," ",a.createElement("code",null,"AudioState")," class. In this case, the only state that's needed is an index into where in the audio file we're currently listening from, which shall be called ",a.createElement("code",null,"pos"),"."),a.createElement(r.CodeSnippet,null,s.AudioStateSnippet),a.createElement("p",null,"Finally, one needs to define the ",a.createElement("code",null,"Audio")," class itself, which derives from ",a.createElement("code",null,"SoundSourceBase<AudioState>"),", so that all stateful information and dependencies and so on are perfectly and implicitly managed. The"," ",a.createElement("code",null,"SoundSourceBase<AudioState>::renderChunk()")," method is overridden to do the actual work of playing the sound. The implementation isn't shown here, since it's mostly ",a.createElement("code",null,"for"),"-loops and and sample frequency calculations and audio channel checks, but all it does is copy the current part of the audio clip into the current ",a.createElement("code",null,"SoundChunk")," of the stream, using"," ",a.createElement("code",null,"state.pos")," for book-keeping. This audio clip itself is stored in the"," ",a.createElement("code",null,"soundbuffer")," member. Note that this piece of sound information will always be the same, no matter who's listening to this ",a.createElement("code",null,"Audio")," object, and therefore, it is not stored in the ",a.createElement("code",null,"AudioState")," type. As an extra, this class also defines and exposes a ",a.createElement("code",null,"current_time")," member, which is a special kind of number source that is associated with the state of the ",a.createElement("code",null,"Audio")," object. This number source can be used to query the (subjective) current time of the ",a.createElement("code",null,"Audio")," object. As you can see, this work, which is complicated and delicate at heart, is handled well by templates and inheritance, and the code needed to implement new and interesting features is minimal."),a.createElement(r.CodeSnippet,null,s.AudioSnippet))),a.createElement(o.Section,{header:a.createElement("h2",null,"Full Source Code")},a.createElement("p",null,"The Flosion source code is stored on github, and can be found"," ",a.createElement(l.Link,{dst:"https://github.com/timstr/Flosion"},"here"),"."))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.CodeSnippet=(e=>a.createElement("div",{className:"codesnippet"},a.createElement("code",null,a.createElement("pre",null,e.children)))),t.KeyWord=(e=>a.createElement("span",{className:"code-keyword"},e.children)),t.Type=(e=>a.createElement("span",{className:"code-type"},e.children)),t.Name=(e=>a.createElement("span",{className:"code-name"},e.children)),t.Comment=(e=>a.createElement("span",{className:"code-comment"},e.children))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NumberSourceSnippet="struct NumberSource {\n    virtual float evaluate(const State* state) = 0;\n\nprivate:\n    Stateful* const parent;\n    std::vector<Stateful*> dependencies;\n    std::vector<Stateful*> dependants;\n};",t.NumberInputSnippet="struct NumberInput {\n\n    void setSource(NumberSource* _source);\n\n    float getValue(const State* state, float default_value = 0) const;\n\nprivate:\n    NumberSource* source;\n};",t.AddObjectSnippet="struct Add {\n    float evaluate(const State* state) override {\n        return input1.getValue(state) + input2.getValue(state);\n    }\n\n    NumberInput input1, input2;\n};",t.StatefulSnippet="struct Stateful {\n    virtual ~Stateful();\n\n    virtual double getTimeSpeed(const State* state_chain) const;\n\n    uint32_t getTime(const State* state_chain) const;\n\n    virtual std::size_t numStates() const = 0;\n\n    std::vector<Stateful*> dependencies;\n    std::vector<Stateful*> dependants;\n};",t.StateSnippet="struct State {\n    State(const State* _parent, const Stateful* _owner);\n    virtual ~State();\n\n    virtual void reset() = 0;\n\nprivate:\n\n    const State* const parent;\n    const Stateful* const owner;\n};",t.SoundSourceSnippet="struct SoundSource : Stateful {\n\n    virtual void getNextChunk(SoundChunk& chunk, const State* dependant_state, const Stateful* dst) = 0;\n\nprotected:\n    std::vector<SoundInput*> destinations;\n};",t.SoundSourceBaseSnippet='template <class StateType>\nstruct SoundSourceBase : SoundSource {\n\n    void getNextChunk(SoundChunk& chunk, const State* parent_state, const Stateful* dst) override {\n        StateType& state = lookupState(parent_state, dst);\n        renderChunk(chunk, state);\n    }\n\n    virtual void renderChunk(SoundChunk& chunk, StateType& state) = 0;\n\n    template <typename SoundSourceType = SoundSource>\n    struct StateNumberSource : NumberSource {\n\n        float evaluate(const State* state) const override;\n\n        virtual float getValue(const StateType& state, const State* context) const = 0;\n    };\n\nprivate:\n\n    StateType& lookupState(const State* parent_state, const Stateful* dependant) {\n        auto it = state_map.find(std::make_pair(parent_state, dependant));\n        if (it == state_map.end()) {\n            throw std::runtime_error("The parent state could not be found in the state map");\n        } else {\n            return it->second;\n        }\n    }\n\n    std::unordered_map<std::pair<const State*, const Stateful*>, StateType> state_map;\n};',t.AudioStateSnippet="struct AudioState : State {\n\n    void reset() override {\n        pos = 0;\n    }\n\n    uint64_t pos;\n};",t.AudioSnippet="struct Audio : SoundSourceBase<AudioState> {\n\n    void loadFromFile(std::string filename);\n\n    void renderChunk(SoundChunk& chunk, AudioState& state) override;\n\n    struct CurrentTime : StateNumberSource<Audio> {\n        float getValue(const AudioState& state, const State* context) const override {\n            return state->pos / (float)SAMPLE_FREQUENCY;\n        }\n    } current_time;\n\nprivate:\n    sf::SoundBuffer soundbuffer;\n};"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(6),l=n(1),r=["362396984","352281611","352281068","275723029","317720529","293278142","275870851","275870658","271523671","315647927","267075861"];t.SongGallery=(()=>a.createElement(a.Fragment,null,r.map(e=>a.createElement(o.SoundCloudPlayer,{key:e,trackid:e,width:500,height:200})),a.createElement("div",null,"More songs at"," ",a.createElement(l.Link,{dst:"https://soundcloud.com/timstraubinger"},"soundcloud.com/timstraubinger"))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.RigidBodyDynamics=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Rigid Body Dynamics"),"Coming soon"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.CellularAutomata=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Cellular Automata"),"Coming soon"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(4),l=n(3),r=n(24),s=n(25),i=n(26),c=n(27);t.OtherProjects=(()=>a.createElement(o.TabMenu,{contentColor:new l.Color("#FFFF66"),backgroundColor:new l.Color("#FFFFFF")},()=>[{title:"Tim's GUI",render:()=>a.createElement(r.TimsGUI,null)},{title:"Platformer Game",render:()=>a.createElement(c.PlatformerGame,null)},{title:"Gibberish Generators",render:()=>a.createElement(s.GibberishGenerators,null)},{title:"Random Things",render:()=>a.createElement(i.RandomThings,null)}]))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.TimsGUI=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Tim's GUI"),"Coming soon"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.GibberishGenerators=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Gibberish generators"),"Coming soon"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.RandomThings=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Random things"),"Coming soon"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0);t.PlatformerGame=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"Platformer Game"),"Coming soon"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(4),l=n(3),r=n(29),s=n(30);t.Fractals=(()=>a.createElement(o.TabMenu,{contentColor:new l.Color("#99FFBB"),backgroundColor:new l.Color("#FFFFFF")},e=>[{title:"About",render:()=>a.createElement(r.AboutFractals,{gotoGallery:()=>e("Gallery")})},{title:"Gallery",render:()=>a.createElement(s.FractalGallery,null)}]))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2),l=n(7),r=n(8),s=n(1),i=e=>a.createElement("div",null,e.names.map(e=>a.createElement(l.ImageIcon,{image:"fractals/"+e,key:e})));t.AboutFractals=(e=>a.createElement(a.Fragment,null,a.createElement("h1",null,"About my fractals"),a.createElement("p",null,"More images are available in the"," ",a.createElement("button",{onClick:e.gotoGallery},"gallery")),a.createElement(o.Section,{header:a.createElement(a.Fragment,null,a.createElement("h2",null,"A Brief History"),a.createElement("p",null,"I was born, once. Later, I made my first fractal."))},a.createElement(l.ImageIcon,{image:"fractals/fractalui"})),a.createElement(o.Section,{header:a.createElement(a.Fragment,null,a.createElement("h2",null,"2D Fractals (in colour)"),a.createElement("p",null,"The fractals here are various hybrids of"," ",a.createElement(s.Link,{dst:"https://en.wikipedia.org/wiki/Mandelbrot_set"},"Mandelbrot")," ","and"," ",a.createElement(s.Link,{dst:"https://en.wikipedia.org/wiki/Mandelbox"},"mandelbox")," ","fractals, with a variety of other transformations thrown into the fractal algorithm. To produce these, a simple function is defined that maps points in 2D space to other points. For every point in the image, this function is applied repeatedly, until it either grows too large or some maximum number of iterations is reached. The number of iterations is then used to choose a colour from gradient. While the exact choice of transformations and colours allows for an enormous amount of customizability, the results are often very unpredictable."),a.createElement("p",null))},a.createElement(i,{names:["particleaccelerator","tree","berryshake","rose","eye","toroidalvortex"]})),a.createElement(o.Section,{header:a.createElement("h2",null,"2D Fractals (with texture)")},"UV mapping using curvature and amplitude",a.createElement(i,{names:["algae","cauliflower","oilfilm","saturn"]}),"For comparison, two of these are textured using"," ",a.createElement(s.Link,{dst:"img/fractals/seaweed.png"},"this picture of seaweed"),"."),a.createElement(o.Section,{header:a.createElement("h2",null,"3D Fractals")},"Using CPU. Oh I did not sleep that night",a.createElement(i,{names:["mandelbox4","mandelbox3","mandelbox1","mandelbox2"]})),a.createElement(o.Section,{header:a.createElement("h2",null,"3D Fractals (GLSL)")},"Blinn-Phong shading maybe?",a.createElement(i,{names:["glbox1","glbox2"]})),a.createElement(o.Section,{header:a.createElement("h2",null,"Other")},"mostly cubes here"),a.createElement(i,{names:["cubes1","cubes2","octree","voxelplanet"]}),a.createElement(r.LazyImage,{src:"fractals/flying.gif"}),a.createElement(r.LazyImage,{src:"fractals/fovsilliness.gif"}),a.createElement(r.LazyImage,{src:"fractals/gooflow.gif"}),a.createElement(r.LazyImage,{src:"fractals/orbit.gif"})))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(7),l=n(1),r=["algae","alveoli","berryshake","box","buddha","cauliflower","clockwork","contrail","cubes1","cubes2","eye","flyingmountains","gasbox","glbox1","glbox2","greensponge","hydra","ironsprout","mandelbox1","mandelbox2","mandelbox3","mandelbox4","map","mau5","octree","oilfilm","particleaccelerator","rose","sand","saturn","skullraa","spongeheirarchy","teddytoast","toroidalvortex","tree","voxelplanet"];t.FractalGallery=(()=>a.createElement(a.Fragment,null,a.createElement("div",{className:"fractals"},r.map(e=>a.createElement(o.ImageIcon,{key:e,image:"fractals/"+e}))),a.createElement("div",null,"More images at"," ",a.createElement(l.Link,{dst:"https://timstraubinger.tumblr.com/"},"timstraubinger.tumblr.com/"))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(4),l=n(3),r=n(32),s=n(33);t.AboutMe=(()=>a.createElement(o.TabMenu,{contentColor:new l.Color("#f8ffd0"),backgroundColor:new l.Color("#ffffff")},()=>[{title:"Intro",render:()=>a.createElement(r.Intro,null)},{title:"My Skills",render:()=>a.createElement(s.MySkills,null)}]))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2),l=n(1);t.Intro=(()=>a.createElement("div",null,a.createElement("h1",null,"Hello! I am Tim."),a.createElement(o.Section,{header:a.createElement("h2",null,"Bio")},a.createElement("p",null,"I'm currently finishing my bachelor's degree in Computer Science at UBC Vancouver. When I'm not biking or exploring nature, I like to create my own worlds, usually with software, sometimes with Lego. Most of my software projects revolve around trying to emulate organic chaos and complexity of some form or another."),a.createElement("p",null,"Take a look around. Please"," ",a.createElement("a",{href:"mailto:straubinger.tim@gmail.com"},"ask me")," any questions you have about my work.")),a.createElement(o.Section,{header:a.createElement("h2",null,"Resume")},a.createElement("p",null,"Click ",a.createElement(l.Link,{dst:"TimStraubingerCV.pdf"},"here")," for my resume."))))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),o=n(2),l=n(1);t.MySkills=(()=>a.createElement(a.Fragment,null,a.createElement("h1",null,"My Skills"),a.createElement(o.Section,{header:a.createElement("h2",null,"Curriculum Vitae")},"Click ",a.createElement(l.Link,{dst:"TimStraubingerCV.pdf"},"here for my CV")),a.createElement(o.Section,{header:a.createElement("h2",null,"Skills")},a.createElement("h4",null,"Programming Languages"),a.createElement("p",null,"I'm proficient in C++. It's my favourite language by a large margin and I've been using it regularly for over 6 years. Given the number of times I've learned something new that made me rethink the language I thought I knew, I cannot claim to know the language through and through. But in addition the basics of C++98 like all the fun gadgets of the Standard Library, basic object oriented programming, templates, the quirky build model, and the constraints and capabilities of the hardware runtime environment, I've been internalizing the changes introduced in C++11 and make an effort to keep up to date with some of the more recent language features since then. I have a great respect for the language's power and it's dark side commonly known as Undefined Behavior. Some features of the language that I'm very familiar with include:"),a.createElement("ul",{className:"multicolumn"},a.createElement("li",null,"the ",a.createElement("code",null,"auto")," keyword"),a.createElement("li",null,"move semantics"),a.createElement("li",null,"variadic templates"),a.createElement("li",null,"SFINAE techniques"),a.createElement("li",null,"lambda functions"),a.createElement("li",null,"smart pointers"),a.createElement("li",null,a.createElement("code",null,"const"),"-correctness"),a.createElement("li",null,a.createElement("code",null,"std::function")),a.createElement("li",null,"special member functions"),a.createElement("li",null,"operator overloading"),a.createElement("li",null,"the ",a.createElement("code",null,"noexcept")," specifier"),a.createElement("li",null,"the ",a.createElement("code",null,"constexpr")," keyword"),a.createElement("li",null,"uniform initialization"),a.createElement("li",null,"forwarding references"),a.createElement("li",null,"multiple inheritance")),a.createElement("p",null,"I also hope to learn more about atomics and using the standard libary's synchronization primitives. I eagerly await concepts, modules, and coroutines in C++20."),a.createElement("h4",null,"Other Programming Languages"),a.createElement("p",null,"I've also spent a lot of time with JavaScript (specifically, with TypeScript), and with C. Additional programming languages that I have a basic familiarity with include"),a.createElement("ul",{className:"multicolumn"},a.createElement("li",null,"Java"),a.createElement("li",null,"C#"),a.createElement("li",null,"Julia"),a.createElement("li",null,"Haskell"),a.createElement("li",null,"Prolog"),a.createElement("li",null,"CUDA C"),a.createElement("li",null,"GLSL"),a.createElement("li",null,"Erlang")),a.createElement(o.SubSection,null,a.createElement("h4",null,"Frameworks, Environment, Libraries, Tools"),a.createElement("ul",{className:"multicolumn"},a.createElement("li",null,a.createElement(l.Link,{dst:"https://reactjs.org/"},"React")),a.createElement("li",null,a.createElement(l.Link,{dst:"https://www.sfml-dev.org/"},"SFML")),a.createElement("li",null,a.createElement(l.Link,{dst:"https://www.libsdl.org/"},"SDL")),a.createElement("li",null,a.createElement(l.Link,{dst:"https://threejs.org/"},"three.js")),a.createElement("li",null,a.createElement(l.Link,{dst:"https://www.boost.org/"},"Boost")),a.createElement("li",null,"git"),a.createElement("li",null,"CMake"),a.createElement("li",null,"Visual Studio"),a.createElement("li",null,"Visual Studio Code"))),a.createElement(o.SubSection,null,a.createElement("h4",null,"Human Languages"),a.createElement("ul",null,a.createElement("li",null,"English"),a.createElement("li",null,"German"))))))}]);
//# sourceMappingURL=bundle.js.map